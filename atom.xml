<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CloudPai</title>
  
  <subtitle>个人博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cloudpai.site/"/>
  <updated>2018-05-26T12:04:48.965Z</updated>
  <id>http://cloudpai.site/</id>
  
  <author>
    <name>CloudPai</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Cloud 技术分析:Netflix 组件</title>
    <link href="http://cloudpai.site/2018/05/26/2018-05-26-1/"/>
    <id>http://cloudpai.site/2018/05/26/2018-05-26-1/</id>
    <published>2018-05-26T11:19:31.000Z</published>
    <updated>2018-05-26T12:04:48.965Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;1-为什么微服务架构需要-Spring-Cloud&quot;&gt;&lt;a href=&quot;#1-为什么微服务架构需要-Spring-Cloud&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
    
      <category term="SpringCloud" scheme="http://cloudpai.site/tags/SpringCloud/"/>
    
      <category term="Netflix" scheme="http://cloudpai.site/tags/Netflix/"/>
    
  </entry>
  
  <entry>
    <title>Spring Cloud构建微服务架构：服务注册与发现（Eureka、Consul）【Dalston版】实操笔记</title>
    <link href="http://cloudpai.site/2018/05/26/2018-05-26/"/>
    <id>http://cloudpai.site/2018/05/26/2018-05-26/</id>
    <published>2018-05-26T02:42:47.000Z</published>
    <updated>2018-05-26T11:10:09.928Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;SpringCloud 学习资料：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;史上最简单的 SpringCloud 教程 | 终章 - CSDN博客&lt;br&gt;&lt;a href=&quot;h
      
    
    </summary>
    
    
      <category term="SpringCloud" scheme="http://cloudpai.site/tags/SpringCloud/"/>
    
  </entry>
  
  <entry>
    <title>Redisson实现分布式锁原理</title>
    <link href="http://cloudpai.site/2018/05/25/2018-05-25-1/"/>
    <id>http://cloudpai.site/2018/05/25/2018-05-25-1/</id>
    <published>2018-05-25T13:34:43.000Z</published>
    <updated>2018-05-25T13:36:23.530Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;现在项目的 Redis 缓存需要用到定时任务，就学习了一下 Spring 的 @Scheduled 注解。使用起来很简单。&lt;/p&gt;
&lt;p&gt;首先当然是在 Spring 的 xm
      
    
    </summary>
    
    
      <category term="Redisson" scheme="http://cloudpai.site/tags/Redisson/"/>
    
  </entry>
  
  <entry>
    <title>Redisson实现分布式锁原理</title>
    <link href="http://cloudpai.site/2018/05/25/2018-05-25/"/>
    <id>http://cloudpai.site/2018/05/25/2018-05-25/</id>
    <published>2018-05-25T13:13:59.000Z</published>
    <updated>2018-05-25T13:26:18.121Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;Redis-分布式锁流程图&quot;&gt;&lt;a href=&quot;#Redis-分布式锁流程图&quot; class=&quot;headerlink&quot; title=&quot;Redis 分布式锁流程图&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="Redisson" scheme="http://cloudpai.site/tags/Redisson/"/>
    
  </entry>
  
  <entry>
    <title>springmvc restful 教程</title>
    <link href="http://cloudpai.site/2018/05/24/2018-05-24-2/"/>
    <id>http://cloudpai.site/2018/05/24/2018-05-24-2/</id>
    <published>2018-05-24T15:07:04.000Z</published>
    <updated>2018-05-25T09:29:57.613Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;本文我们将使用 Spring MVC 4 实现 CRUD Restful WebService , 通过 RestTemplate 写一个 REST 客户端，定义这些服务. 
      
    
    </summary>
    
    
      <category term="SpringMVC" scheme="http://cloudpai.site/tags/SpringMVC/"/>
    
      <category term="Restful" scheme="http://cloudpai.site/tags/Restful/"/>
    
  </entry>
  
  <entry>
    <title>从Spring-Session源码看Session机制的实现细节</title>
    <link href="http://cloudpai.site/2018/05/24/2018-05-24-1/"/>
    <id>http://cloudpai.site/2018/05/24/2018-05-24-1/</id>
    <published>2018-05-24T13:39:23.000Z</published>
    <updated>2018-05-24T13:55:21.344Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Spring Session 主要解决了分布式场景下 Session 的共享问题，本文将从 Spring Session 的源码出发，来讨论一些 Session 设计的细节。
      
    
    </summary>
    
    
      <category term="源码" scheme="http://cloudpai.site/tags/%E6%BA%90%E7%A0%81/"/>
    
      <category term="SpringSession" scheme="http://cloudpai.site/tags/SpringSession/"/>
    
  </entry>
  
  <entry>
    <title>objectmapper详解</title>
    <link href="http://cloudpai.site/2018/05/24/2018-05-24/"/>
    <id>http://cloudpai.site/2018/05/24/2018-05-24/</id>
    <published>2018-05-24T11:40:42.000Z</published>
    <updated>2018-05-24T12:05:25.484Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;1-Jackson&quot;&gt;&lt;a href=&quot;#1-Jackson&quot; class=&quot;headerlink&quot; title=&quot;1.Jackson&quot;&gt;&lt;/a&gt;1.Jackson
      
    
    </summary>
    
    
      <category term="Jackson" scheme="http://cloudpai.site/tags/Jackson/"/>
    
  </entry>
  
  <entry>
    <title>微服务</title>
    <link href="http://cloudpai.site/2018/05/22/2018-05-22/"/>
    <id>http://cloudpai.site/2018/05/22/2018-05-22/</id>
    <published>2018-05-22T14:28:46.000Z</published>
    <updated>2018-05-22T14:28:49.723Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;
      
    
    </summary>
    
    
      <category term="微服务" scheme="http://cloudpai.site/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="Docker" scheme="http://cloudpai.site/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Spring Session</title>
    <link href="http://cloudpai.site/2018/05/19/2018-05-19-1/"/>
    <id>http://cloudpai.site/2018/05/19/2018-05-19-1/</id>
    <published>2018-05-19T08:47:37.000Z</published>
    <updated>2018-05-19T08:48:09.699Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;从零开始的Spring Session(一) | 程序猿DD&lt;br&gt;&lt;a href=&quot;http://blog.didispace.com/sprin
      
    
    </summary>
    
    
      <category term="Spring" scheme="http://cloudpai.site/tags/Spring/"/>
    
      <category term="Session" scheme="http://cloudpai.site/tags/Session/"/>
    
  </entry>
  
  <entry>
    <title>Intellij IDEA 2017 debug 断点调试技巧与总结详解篇</title>
    <link href="http://cloudpai.site/2018/05/19/2018-05-19/"/>
    <id>http://cloudpai.site/2018/05/19/2018-05-19/</id>
    <published>2018-05-19T03:22:30.000Z</published>
    <updated>2018-05-19T03:24:20.308Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在调试代码的时候，你的项目得 debug 模式启动，也就是点那个绿色的甲虫启动服务器，然后，就可以在代码里面断点调试啦。&lt;br&gt;下面&lt;strong&gt;不要在意，这个快捷键具体是
      
    
    </summary>
    
    
      <category term="IDEA" scheme="http://cloudpai.site/tags/IDEA/"/>
    
      <category term="debug" scheme="http://cloudpai.site/tags/debug/"/>
    
  </entry>
  
  <entry>
    <title>Cookie,Session 和 Token 机制和区别</title>
    <link href="http://cloudpai.site/2018/05/17/2018-05-17-2/"/>
    <id>http://cloudpai.site/2018/05/17/2018-05-17-2/</id>
    <published>2018-05-17T12:43:41.000Z</published>
    <updated>2018-05-17T12:47:21.649Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;1-背景介绍&quot;&gt;&lt;a href=&quot;#1-背景介绍&quot; class=&quot;headerlink&quot; title=&quot;1. 背景介绍&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. 背景介绍&lt;/
      
    
    </summary>
    
    
      <category term="Session" scheme="http://cloudpai.site/tags/Session/"/>
    
      <category term="Cookie" scheme="http://cloudpai.site/tags/Cookie/"/>
    
  </entry>
  
  <entry>
    <title>大型项目架构演进过程及思考的点</title>
    <link href="http://cloudpai.site/2018/05/17/2018-05-17-1/"/>
    <id>http://cloudpai.site/2018/05/17/2018-05-17-1/</id>
    <published>2018-05-17T12:43:36.000Z</published>
    <updated>2018-05-17T12:43:38.078Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;大型项目架构演进过程及思考的点&quot;&gt;&lt;a href=&quot;#大型项目架构演进过程及思考的点&quot; class=&quot;headerlink&quot; title=&quot;大型项目架构演进过程及思
      
    
    </summary>
    
    
      <category term="tomcat" scheme="http://cloudpai.site/tags/tomcat/"/>
    
      <category term="IDEA" scheme="http://cloudpai.site/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat 集群</title>
    <link href="http://cloudpai.site/2018/05/17/2018-05-17/"/>
    <id>http://cloudpai.site/2018/05/17/2018-05-17/</id>
    <published>2018-05-17T12:17:28.000Z</published>
    <updated>2018-05-17T12:46:26.090Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;Tomcat-集群&quot;&gt;&lt;a href=&quot;#Tomcat-集群&quot; class=&quot;headerlink&quot; title=&quot;Tomcat 集群&quot;&gt;&lt;/a&gt;Tomcat 集群
      
    
    </summary>
    
    
      <category term="tomcat" scheme="http://cloudpai.site/tags/tomcat/"/>
    
      <category term="IDEA" scheme="http://cloudpai.site/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>idea 远程部署tomcat 配置</title>
    <link href="http://cloudpai.site/2018/05/15/2018-05-15/"/>
    <id>http://cloudpai.site/2018/05/15/2018-05-15/</id>
    <published>2018-05-15T12:50:43.000Z</published>
    <updated>2018-05-15T12:54:55.183Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;之前做项目，一直都是把本地的源码上传到 svn，服务器是通过 ant 或者 maven 脚本来编译的生成项目的。每次都要单独登录接服务器进行项目的部署和发布，感觉特别繁琐。（
      
    
    </summary>
    
    
      <category term="tomcat" scheme="http://cloudpai.site/tags/tomcat/"/>
    
      <category term="IDEA" scheme="http://cloudpai.site/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Jackson实现Object对象与Json字符串的互转</title>
    <link href="http://cloudpai.site/2018/05/14/2018-05-14-4/"/>
    <id>http://cloudpai.site/2018/05/14/2018-05-14-4/</id>
    <published>2018-05-14T14:46:18.000Z</published>
    <updated>2018-05-14T14:56:03.953Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;在项目开发过程中，当客户端与服务器响应时，数据交互是必不可少的。然而通过 Json 实现数据交互成为我们开发中的一部分，进而 Jackson 为我们的 Json 转化提供了很
      
    
    </summary>
    
    
      <category term="Jackson" scheme="http://cloudpai.site/tags/Jackson/"/>
    
  </entry>
  
  <entry>
    <title>TypeReference -- 让Jackson Json在List/Map中识别自己的Object</title>
    <link href="http://cloudpai.site/2018/05/14/2018-05-14-3/"/>
    <id>http://cloudpai.site/2018/05/14/2018-05-14-3/</id>
    <published>2018-05-14T14:39:05.000Z</published>
    <updated>2018-05-24T11:24:30.689Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt; 最近使用了 jackson json 来格式化数据输出，但是反序列化生成对象的时候碰到点麻烦，jackson 把数据默认解析成了 Map 对象，经查询文档，问题解决，在 O
      
    
    </summary>
    
    
      <category term="Jackson" scheme="http://cloudpai.site/tags/Jackson/"/>
    
  </entry>
  
  <entry>
    <title>Jackson 框架的高阶应用</title>
    <link href="http://cloudpai.site/2018/05/14/2018-05-14-2/"/>
    <id>http://cloudpai.site/2018/05/14/2018-05-14-2/</id>
    <published>2018-05-14T14:33:35.000Z</published>
    <updated>2018-05-14T14:33:51.300Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Jackson 是当前用的比较广泛的，用来序列化和反序列化 json 的 Java 的开源框架。Jackson 社 区相对比较活跃，更新速度也比较快， 从 Github 中的
      
    
    </summary>
    
    
      <category term="Jackson" scheme="http://cloudpai.site/tags/Jackson/"/>
    
  </entry>
  
  <entry>
    <title>关于 Java 泛型 &quot;擦除&quot; 的一点思考</title>
    <link href="http://cloudpai.site/2018/05/14/2018-05-14-1/"/>
    <id>http://cloudpai.site/2018/05/14/2018-05-14-1/</id>
    <published>2018-05-14T14:17:15.000Z</published>
    <updated>2018-05-14T14:20:34.404Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;泛型是 JDK1.5 后的一个特性，是一个参数类型的应用，可以将这个参数声明在类、接口、方法中，就像我们方法中定义的局部变量一样；在工作中，我们常在 List，Map，Set
      
    
    </summary>
    
    
      <category term="泛型" scheme="http://cloudpai.site/tags/%E6%B3%9B%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>JAVA泛型通配符T，E，K，V区别，T以及Class&lt;T&gt;，Class&lt;?&gt;的区别</title>
    <link href="http://cloudpai.site/2018/05/14/2018-05-14/"/>
    <id>http://cloudpai.site/2018/05/14/2018-05-14/</id>
    <published>2018-05-14T12:59:12.000Z</published>
    <updated>2018-05-14T13:04:50.322Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;1-先解释下泛型概念&quot;&gt;&lt;a href=&quot;#1-先解释下泛型概念&quot; class=&quot;headerlink&quot; title=&quot;1. 先解释下泛型概念&quot;&gt;&lt;/a&gt;1. 先解
      
    
    </summary>
    
    
      <category term="泛型" scheme="http://cloudpai.site/tags/%E6%B3%9B%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>SSO CAS 单点登录</title>
    <link href="http://cloudpai.site/2018/05/13/2018-05-13/"/>
    <id>http://cloudpai.site/2018/05/13/2018-05-13/</id>
    <published>2018-05-13T12:17:47.000Z</published>
    <updated>2018-05-13T12:34:11.834Z</updated>
    
    <summary type="html">
    
      
      
        &lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h1 id=&quot;《SSO-CAS-单点系列》之-15-分钟让你了解-SSO-技术到底是个什么鬼！&quot;&gt;&lt;a href=&quot;#《SSO-CAS-单点系列》之-15-分钟让你了解-SSO-
      
    
    </summary>
    
    
      <category term="SSO" scheme="http://cloudpai.site/tags/SSO/"/>
    
  </entry>
  
</feed>
